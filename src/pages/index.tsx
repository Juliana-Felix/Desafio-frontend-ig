import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import { contentList, Tab } from '../data'
import React, { useEffect, useRef, useState } from "react";
import close from '../assets/close.png'
import circle from '../assets/circle.png'


import axios from 'axios'

const inter = Inter({ subsets: ['latin'] })

export default function Home(props: Tab) {
  const [popupTogle, setpopupTogle] = useState(false);
  const [citys, setCitys] = useState([])

  const [inputSearch, setInputSearch] = useState("")
  const [filterSearch, setFiterSearch] = useState([])

  const [lastSearch, setLastSearch] = useState("")

  const handleFilter = (event) => {
    setInputSearch(event.target.value)

    const newFilter = citys.filter(value => {
      return value.nome.toLowerCase().includes(inputSearch.toLocaleLowerCase())
    })

    setFiterSearch(newFilter)
  }

  const changecontent = () => {
    setpopupTogle(!popupTogle);
  };

  function handleClickAutoComplete(value: never): void {
    setLastSearch(value.nome)
    setInputSearch(value.nome)
  }

  useEffect(() => {
    const getCitys = () => {
      axios
        .get(`https://servicodados.ibge.gov.br/api/v1/localidades/distritos`)
        .then((r) => setCitys(r?.data))
    };
    getCitys();
  }, [])

  useEffect(() => {
    if (inputSearch === "") {
      setFiterSearch([])
    }
  }, [inputSearch])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <nav className='bg-[#00BCD4]'>
        <div className="mx-auto max-w-07xl px-2 sm:px-6 lg:px-8">
          <div className="relative flex h-16 items-center justify-between">
            <div className="absolute inset-y-0 left-0 flex items-center sm:hidden">
              <button type="button" className="inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white" aria-controls="mobile-menu" aria-expanded="false">
              </button>
            </div>
            <div className="flex flex-1 items-center justify-center sm:items-stretch sm:justify-start">

              <button className="flex flex-shrink-0 items-center" onClick={changecontent}>
                <Image className="block h-8 w-auto lg:hidden" src={circle} alt="logo Company"></Image>
                <Image className="hidden h-8 w-auto lg:block" src={circle} alt="lofo Company"></Image>
                <img src="https://cdn.discordapp.com/attachments/464209886528405524/1061305932467933215/halfCircle.png" alt="company" />
                <img src="https://cdn.discordapp.com/attachments/464209886528405524/1061305933059326083/halfCircle2.png" alt="company" />
              </button>
            </div>
            <p className='font-medium' translate='no'>HOME</p>
          </div>
        </div>
      </nav>
      <main className="flex">
        {popupTogle && (
          <div
            className="fixed top-0 pt-20 bottom-0 left-0 right-0 bg-black-rgba"
          >
            <div
              onClick={(e) => e.stopPropagation()}
              className="w-1/3 top-0 bottom-0 h-auto bg-white absolute right-0 rounded-r-lg box-border"
            >
              <div className="w-full text-right pr-2">
                <button
                  onClick={changecontent}
                  className="rounded-full hover:bg-gray-200 delay-50 duration-100 p-1"
                >
                  <Image src={close} alt="fechar" />
                </button>
              </div>
              <div className=" w-96 t-0  justify-center pl-20 pt-48 flex-auto block border-solid box-border">
                {//popupContent.map((data) => {
                  //return (
                  <div>
                    <p className="pb-1">
                      Escolha um município
                    </p>

                    <div>
                      <input className='border-none outline-none' type="text" value={inputSearch} onChange={handleFilter} placeholder='Porto Alegre, RS' autoFocus />
                    </div>
                    <div>
                      {filterSearch !== 0 &&
                        <div className="scrollbar-none items-center pt-5 w-96 h-52 rounded-md gap-6 bg-white pr-8 py-0 overflow-hidden overflow-y-auto ">
                          {filterSearch.map(value => (
                            <div key={value.id} onClick={() => handleClickAutoComplete(value)} className='flex items-center py-2 px-6 gap-10 rounded-full ring-2 ring-gray-100 cursor-pointer'>
                              {value.nome}
                            </div>
                          )
                          )
                          }
                        </div>
                      }
                      {filterSearch == 0 &&
                        <div className='absolute top-80 bg-[#F0F4F6] p-2 rounded-2xl'>
                          {lastSearch}
                        </div>
                      }
                    </div>
                  </div>

                  //);
                }
              </div>
            </div>
          </div>
        )}
        <div className="column w-full bg-[#F5F5F5]">
          <div className="flex-1 h-[100vh]  mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
            {contentList && contentList.length > 0 && (
              <div key={0}>
                <div className=''>
                  <div className='flex flex-wrap space-x-6 text-center lg:grid grid-cols-2 pt-[10%]'>
                    <div className='flex flex-1 items-center justify-center lg:pr-56'>
                      <h1 className='m-auto font-medium text-3xl leading-10 tracking-tighter lg:pb-72 pt-8'>{contentList[0].leftTitle}</h1>
                    </div>

                    <div className='w-[500px] pt-8'>
                      <h2 className='font-medium text-3xl leading-10 lg:text-justify '>{contentList[0].rightTitle}</h2>
                      <p className='pt-10 text-justify'>{contentList[0].rightContent}</p>
                      <div className='flex items-center'>
                        <div className="w-12 h-12 rounded-full ring-2 ring-gray-400 mt-20 font-medium flex items-center justify-center"><span className='text-2xl'>→</span></div>
                        <p className='pt-20 pl-6 font-medium'>{contentList[0].buttonTitle}</p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>
          <div className='flex-1 h-[100vh]  bg-black text-white'>
            <div className="column w-full">
              <div className="flex-1 h-[100vh]  mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
                {contentList && contentList.length > 0 && (
                  <div key={1}>
                    <div>
                      <div className='flex flex-wrap space-x-6 text-center lg:grid grid-cols-2 pt-[10%]'>
                        <div className='flex flex-1 items-center lg:pr-56'>
                          <h1 className='m-auto font-medium text-3xl leading-10 tracking-tighter lg:pb-32'>{contentList[1].leftTitle}</h1>
                        </div>

                        <div className='w-[500px] pt-8'>
                          <h2 className='font-medium text-3xl leading-10 lg:text-justify '>{contentList[1].rightTitle}</h2>
                          <p className='pt-10 text-justify'>{contentList[1].rightContent}</p>
                          <div className='flex items-center'>
                            <div className="w-12 h-12 rounded-full ring-2 ring-gray-400 mt-20 font-medium flex items-center justify-center"><span className='text-2xl'>→</span></div>
                            <p className='pt-20 pl-6 font-medium'>{contentList[1].buttonTitle}</p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      </main>
      <footer className='bg-[#00BCD4]'>
        <div className="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
          <div className="relative flex h-16 items-center justify-between">
            <div className="absolute inset-y-0 left-0 flex items-center sm:hidden">
              <button type="button" className="inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white" aria-controls="mobile-menu" aria-expanded="false">
              </button>
            </div>
            <div className="flex flex-1 items-center justify-center sm:items-stretch sm:justify-start">
              <button className="flex flex-shrink-0 items-center">
                <Image className="block h-8 w-auto lg:hidden" src={circle} alt="logo Company"></Image>
                <Image className="hidden h-8 w-auto lg:block" src={circle} alt="lofo Company"></Image>
                <img src="https://cdn.discordapp.com/attachments/464209886528405524/1061305932467933215/halfCircle.png" alt="company" />
                <img src="https://cdn.discordapp.com/attachments/464209886528405524/1061305933059326083/halfCircle2.png" alt="company" />
              </button>
            </div>
          </div>
        </div>
      </footer>
    </>
  )
}
